% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epidatacall.R
\name{create_epidata_call}
\alias{create_epidata_call}
\alias{epidata_call}
\alias{fetch}
\alias{fetch_tbl}
\alias{fetch_classic}
\alias{request_url}
\alias{with_base_url}
\title{An abstraction that holds information needed to make an epidata request}
\usage{
create_epidata_call(
  endpoint,
  params,
  meta = NULL,
  only_supports_classic = FALSE
)

fetch(epidata_call, fields = NULL, disable_date_parsing = FALSE)

fetch_tbl(epidata_call, fields = NULL, disable_date_parsing = FALSE)

fetch_classic(epidata_call, fields = NULL, disable_data_frame_parsing = TRUE)

request_url(epidata_call, format_type = "classic", fields = NULL)

with_base_url(epidata_call, base_url)
}
\arguments{
\item{endpoint}{the epidata endpoint to call}

\item{params}{the parameters to pass to the epidata endpoint}

\item{meta}{meta data to attach to the epidata call}

\item{only_supports_classic}{if true only classic format is supported}

\item{epidata_call}{an instance of \code{epidata_call}}

\item{fields}{a list of epidata fields to return, or NULL to return all
fields (default) e.g. c("time_value", "value") to return only the
time_value and value fields or c("-direction") to return everything except
the direction field}

\item{disable_date_parsing}{disable automatic date parsing}

\item{disable_data_frame_parsing}{do not automatically cast the epidata
output to a data frame (some endpoints return a list of lists, which is not
a data frame)}

\item{format_type}{format to return one of classic,json,csv}

\item{base_url}{base URL to use}

\item{method}{the method to use to fetch the data}
}
\value{
\itemize{
\item For \code{create_epidata_call}: an \code{epidata_call} object
}

\itemize{
\item For \code{fetch}: a tibble or a JSON-like list
}

\itemize{
\item For \code{fetch_tbl}: a \code{\link[tibble:tibble]{tibble::tibble}}
}

\itemize{
\item For \code{fetch_classic}: a JSON-like list
}

\itemize{
\item For \code{request_url}: string containing the URL
}

\itemize{
\item For \code{with_base_url}: an \code{epidata_call} object
}
}
\description{
\code{epidata_call} objects are generated by endpoint functions like
\code{\link{covidcast}}; should be piped into the \code{fetch} function to fetch and format
the data. For most endpoints this will return a tibble, but a few
non-COVIDCAST endpoints only support will return a JSON-like list instead.

\code{create_epidata_call} is the constructor for \code{epidata_call} objects, but you
should not need to use it directly; instead, use an endpoint function, e.g.,
\code{\link{covidcast}}, to generate an \code{epidata_call} for the data of interest.

There are some other functions available for debugging and advanced usage:
\itemize{
\item \code{request_url} (for debugging):  outputs the request URL from which data
would be fetched (note additional parameters below)
\item \code{with_base_url} (advanced): outputs an \code{epidata_call} that requests data
from a different Epidata server
}

\code{fetch} usually returns the data in tibble format, but a few of the endpoints
only support the JSON classic format (delphi, pvt_meta_norostat, and meta).
In that case a JSON-like nested list structure is returned instead.
}
\examples{
covidcast(
  data_source = "jhu-csse",
  signals = "confirmed_7dav_incidence_prop",
  time_type = "day",
  geo_type = "state",
  time_values = epirange(20200601, 20200801),
  geo_values = c("ca", "fl")
) \%>\% fetch()

}
