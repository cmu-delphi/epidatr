% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epidatacall.R
\name{create_epidata_call}
\alias{create_epidata_call}
\alias{epidata_call}
\alias{fetch_tbl}
\alias{fetch_classic}
\alias{fetch_csv}
\alias{fetch_json}
\alias{request_url}
\alias{with_base_url}
\title{An abstraction that holds information needed to make an epidata request}
\usage{
create_epidata_call(
  endpoint,
  params,
  meta = NULL,
  only_supports_classic = FALSE
)

fetch_tbl(epidata_call, fields = NULL, disable_date_parsing = FALSE)

fetch_classic(epidata_call, fields = NULL, disable_date_parsing = FALSE)

fetch_csv(epidata_call, fields = NULL)

fetch_json(epidata_call, fields = NULL, disable_date_parsing = FALSE)

request_url(epidata_call, format_type = "classic", fields = NULL)

with_base_url(epidata_call, base_url)
}
\arguments{
\item{endpoint}{the epidata endpoint to call}

\item{params}{the parameters to pass to the epidata endpoint}

\item{meta}{meta data to attach to the epidata call}

\item{only_supports_classic}{if true only classic format is supported}

\item{epidata_call}{an instance of \code{epidata_call}}

\item{fields}{filter fields}

\item{disable_date_parsing}{disable automatic date parsing}

\item{format_type}{format to return one of classic,json,csv}

\item{base_url}{base URL to use}
}
\value{
\itemize{
\item For \code{create_epidata_call}: an \code{epidata_call} object
}

\itemize{
\item For \code{fetch_tbl}: a \code{\link[tibble:tibble]{tibble::tibble}}
}

\itemize{
\item For \code{fetch_classic}: the "classic" 3-element list format (see above)
}

\itemize{
\item For \code{fetch_csv}: a string containing CSV text, with the \code{"epidata_csv"} class added
}

\itemize{
\item For \code{fetch_json}: a \code{data.frame} form of the object from the parsed JSON
response
}

\itemize{
\item For \code{request_url}: a string containing the URL
}

\itemize{
\item For \code{with_base_url}: another \code{epidata_call} object
}
}
\description{
\code{epidata_call} objects are generated by endpoint functions like \code{\link{covidcast}};
should be piped into a \verb{fetch_*} function to fetch and
format the data:
\itemize{
\item \code{fetch_tbl}: fetches the data, formats as a \code{\link[tibble:tibble]{tibble::tibble}}
\item \code{fetch_classic}: fetches the data in "classic" format: a list with three
elements:
\itemize{
\item \code{"epidata"}: some R object (typically a \code{data.frame}) holding the data,
if the request was successful
\item \code{"message"}: string; either \code{"success"} or some error/warning message
\item \code{"result"}: integer; either 1 or some error/warning code
}
\item \code{fetch_csv}: fetches the data, formats as a string containing CSV data,
with a special class \code{"epidata_csv"} added to prevent accidentally
printing a huge number of lines
\item \code{fetch_json}: fetches the data in JSON format then converts to a \code{data.frame}
}

\code{create_epidata_call} is the constructor for \code{epidata_call} objects, but you
should not need to use it directly; instead, use an endpoint function, e.g.,
\code{\link{covidcast}}, to generate an \code{epidata_call} for the data of interest.

There are some other functions available for debugging and advanced usage:
\itemize{
\item \code{request_url} (for debugging):  outputs the request URL from which data
would be fetched (note additional parameters below)
\item \code{with_base_url} (advanced): outputs an \code{epidata_call} that requests data
from a different Epidata server
}
}
\examples{
covidcast(
  data_source = "jhu-csse",
  signals = "confirmed_7dav_incidence_prop",
  time_type = "day",
  geo_type = "state",
  time_values = epirange(20200601, 20200801),
  geo_values = c("ca", "fl")
) \%>\% fetch_tbl()

}
