% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache.R
\name{set_cache}
\alias{set_cache}
\title{create a new cache for this session}
\usage{
set_cache(
  cache_dir = NULL,
  days = NULL,
  max_size = NULL,
  logfile = NULL,
  prune_rate = 2000L
)
}
\arguments{
\item{days}{the maximum length of time in days to keep any particular cached call. By default this is \code{7}}

\item{max_size}{the size of the entire cache, in MB, at which to start pruning entries.}

\item{logfile}{where cachem's log of transactions is stored. By default, it is \code{file.path(dir, "logfile.txt")}, so it's contained in the cache's directory. The environmental variable is \code{EPIDATR_CACHE_LOGFILE}}

\item{prune_rate}{how many calls to go between checking if any cache elements are too old or if the cache overall is too large. Defaults to \code{2000L}. Since cachem fixes the max time between prune checks to 5 seconds, there's little reason to actually change this parameter. Doesn't have a corresponding environmental variable.}

\item{dir}{the directory in which the cache is stored. By default, this is \code{here::here(".epidatr_cache")}. The environmental variable is \code{EPIDATR_CACHE_DIR}}
}
\description{
\code{set_cache} (re)defines the cache to use. This does not clear existing data at any previous location, but defines a new access for this R session.
Say your cache is normally stored in the default directory, but for the current session you want to save your results in \verb{~/my/temporary/savedirectory}, then you would call \code{set_cache(dir = "~/my/temporary/savedirectory")}.
Or if you know the data from 2 days ago is wrong, you could call \code{set_cache(days = 1)} to clear older data. In both cases, these changes would only last for a single session.
In general, it is better to set your preferences via environmental variables in your \code{.Renviron} folder, with the corresponding variables listed in the arguments section below.
In addition to those, there is the \code{EPIDATR_USE_CACHE} environmental variable, which unless defined to be \code{TRUE} otherwise defaults to \code{FALSE}.

On the backend, the cache uses cachem, with filenames generated using an md5 encoding of the call url. Each file corresponds to a unique epidata-API call.
}
\examples{
\dontrun{
set_cache(
  dir = "some/subdir",
  days = 14,
  max_size = 512,
  logfile = "some/subdir/logs.txt",
  prune_rate = 20L
)
}

}
